import XCTest
@testable import testing

// Code
func stringy(n: Int) -> String {
    var result = ""
    for i in 0..<n {
        result += String((i + 1) % 2)
    }
    return result
}

// Test Cases
class testingCodeChallenge2: XCTestCase {
    override func setUp() {
        super.setUp()
    }
    override func tearDown() {
        super.tearDown()
    }
    func testThatStringyReturnsEmptyStringForLength0() {
        XCTAssert(stringy(0) == "", "When n = 0, an empty stringy should be returned")
    }
    func testStringyBasicTests() {
        XCTAssert(stringy(1) == "1", "stringy(1) should return '1'")
        XCTAssert(stringy(2) == "10")
        XCTAssert(stringy(3) == "101")
        XCTAssert(stringy(4) == "1010")
        XCTAssert(stringy(10) == "1010101010")
        XCTAssert(stringy(25) == "1010101010101010101010101")
        XCTAssert(stringy(22) == "1010101010101010101010")
    }
    func testStringyAdvancedTests() {
        XCTAssert(stringy(100) == "1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010")
        XCTAssert(stringy(99) == "101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101")
        XCTAssert(stringy(101) == "10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101")
        XCTAssert(stringy
    }
}
